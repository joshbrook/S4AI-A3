import numpy as np
import pandas as pd

# Basic characters
S = [0.99, 0.99, 0.99, 0.99, 0.99,
        0.99, 0, 0, 0, 0,
        0.99, 0.99, 0.99, 0.99, 0.99,
        0, 0, 0, 0, 0.99,
        0.99, 0.99, 0.99, 0.99, 0.99]

J = [0.99, 0.99, 0.99, 0.99, 0.99,
        0, 0, 0.99, 0, 0,
        0, 0, 0.99, 0, 0,
        0.99, 0, 0.99, 0, 0,
        0.99, 0.99, 0.99, 0, 0]

H = [0.99, 0, 0, 0, 0.99,
        0.99, 0, 0, 0, 0.99,
        0.99, 0.99, 0.99, 0.99, 0.99,
        0.99, 0, 0, 0, 0.99,
        0.99, 0, 0, 0, 0.99]

# Character variation 1 (emphasizing strokes)
S1 = [0.99, 0.99, 0.99, 0.7, 0.5,
        0.99, 0, 0, 0, 0,
        0.99, 0.99, 0.99, 0.99, 0.99,
        0, 0, 0, 0, 0.99,
        0.5, 0.7, 0.5, 0.6, 0.99]

J1 = [0.5, 0.9, 0.99, 0.8, 0.6,
        0, 0, 0.99, 0, 0,
        0, 0, 0.99, 0, 0,
        0.4, 0, 0.99, 0, 0,
        0.6, 0.8, 0.99, 0, 0]

H1 = [0.6, 0, 0, 0, 0.99,
        0.8, 0, 0, 0, 0.99,
        0.8, 0.99, 0.99, 0.99, 0.99,
        0.7, 0, 0, 0, 0.99,
        0.6, 0, 0, 0, 0.99]

# Character variation 2 (blur)
blurring_matrix = np.array(
        [
                [0.6,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0.2,0.4,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0.2,0.4,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0.2,0.4,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0.2,0.6,0,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0.2,0,0,0,0,0.4,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,0.2,0,0,0,0.2,0.4,0,0,0,0,0.2,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,0,0.2,0,0,0,0,0.4,0.2,0,0,0,0.2,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0.2,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0,0,0,0,0,0],
                [0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.4,0,0,0,0,0.2,0,0,0,0,0],
                [0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0,0.4,0.2,0,0,0,0.2,0,0,0,0],
                [0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0,0,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.2,0.2,0,0,0,0.2,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.4,0,0,0,0,0.2],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0,0.6,0.2,0,0,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.4,0.2,0,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.4,0.2,0],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.4,0.2],
                [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0,0,0,0.2,0.6]
        ]
)

S2 = blurring_matrix.dot(S1)
J2 = blurring_matrix.dot(J1)
H2 = blurring_matrix.dot(H1)

# Character variation 3 (noise)
noise = np.random.normal(0, 0.5, 25) # Random noise could make creating a recognition matrix difficult
S3 = S1 + noise
S3 = np.clip(S3,0,1)

noise = np.random.normal(0, 0.5, 25)
J3 = J1 + noise
J3 = np.clip(J3,0,1)

noise = np.random.normal(0, 0.5, 25)
H3 = H1 + noise
H3 = np.clip(H3,0,1)

# Character variation 4 (blur + noise)
noise = np.random.normal(0, 0.5, 25)
S4 = S2 + noise
S4 = np.clip(S4,0,1)

noise = np.random.normal(0, 0.5, 25)
J4 = J2 + noise
J4 = np.clip(J4,0,1)

noise = np.random.normal(0, 0.5, 25)
H4 = H2 + noise
H4 = np.clip(H4,0,1)

# Correlation matrix
data = {'S1': S1,
        'S2': S2,
        'S3': S3,
        'S4': S4,
        'J1': J1,
        'J2': J2,
        'J3': J3,
        'J4': J4,
        'H1': H1,
        'H2': H2,
        'H3': H3,
        'H4': H4}

df = pd.DataFrame(data)
corr_matrix = df.corr()
print(corr_matrix)
